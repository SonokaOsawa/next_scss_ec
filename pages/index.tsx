import Head from "next/head";
import SearchItems from "../components/molecule/SearchItems";
import { Itemtype } from "../features/items";
import Items from "../components/organisms/items";
import { GetStaticProps, NextPage } from "next";
import { useState } from "react";
import firebase from "../firebase/firebaseConfig";

interface Props {
  items: Itemtype[];
}

const Home: NextPage<Props> = (props) => {
  const items = props.items;
  const [searchItems, setSearchitems] = useState<Itemtype[]>(items);
  const [noSearch, setNosearch] = useState(false);
  const search = (word: string | undefined) => {
    console.log("検索");
    console.log(word);
    if (word === "" || word === undefined) {
      setSearchitems(items);
      setNosearch(false);
    } else {
      let searchArray = searchItems.filter((item) => {
        if (item.name) {
          return item.name.indexOf(word) >= 0;
        }
      });
      if (searchArray.length === 0) {
        setNosearch(true);
      } else {
        setSearchitems(searchArray);
        setNosearch(false);
      }
    }
  };

  return (
    <div>
      <Head>
        <title>ラクラクアロハ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <SearchItems search={search} />
        <Items items={searchItems} noSearch={noSearch} />
      </main>
    </div>
  );
};

export const getStaticProps: GetStaticProps<Props> = async () => {
  let items: Itemtype[] = [];
  const ref = await firebase.firestore().collection("items").get();
  ref.docs.map((doc) => {
    const data = {
      id: doc.data().id,
      name: doc.data().name,
      des: doc.data().des,
      pm: doc.data().pm,
      pl: doc.data().pl,
      img: doc.data().img,
    };
    items.push(data);
  });
  return {
    props: {
      items,
    },
  };
};

export default Home;
